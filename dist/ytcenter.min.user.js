// ==UserScript==
// @id              YouTubeCenter
// @name            YouTube Center
// @namespace       http://www.facebook.com/YouTubeCenter
// @version         3.0.0
// @author          Jeppe Rune Mortensen <jepperm@gmail.com>
// @description     YouTube Center contains all kind of different useful functions which makes your visit on YouTube much more entertaining.
// @icon            https://raw.github.com/YePpHa/YouTubeCenter/master/assets/logo-48x48.png
// @icon64          https://raw.github.com/YePpHa/YouTubeCenter/master/assets/logo-64x64.png
// @domain          yeppha.github.io
// @domain          youtube.com
// @domain          www.youtube.com
// @domain          gdata.youtube.com
// @domain          apis.google.com
// @domain          plus.googleapis.com
// @domain          googleapis.com
// @domain          raw.github.com
// @domain          raw2.github.com
// @domain          s.ytimg.com
// @match           http://*.youtube.com/*
// @match           https://*.youtube.com/*
// @match           https://yeppha.github.io/downloads/YouTubeCenter.meta.js
// @match           http://s.ytimg.com/yts/jsbin/*
// @match           https://s.ytimg.com/yts/jsbin/*
// @match           https://raw.github.com/YePpHa/YouTubeCenter/master/*
// @match           http://apis.google.com/*/widget/render/comments?*
// @match           https://apis.google.com/*/widget/render/comments?*
// @match           http://plus.googleapis.com/*/widget/render/comments?*
// @match           https://plus.googleapis.com/*/widget/render/comments?*
// @include         http://*.youtube.com/*
// @include         https://*.youtube.com/*
// @include         http://apis.google.com/*/widget/render/comments?*
// @include         https://apis.google.com/*/widget/render/comments?*
// @include         http://plus.googleapis.com/*/widget/render/comments?*
// @include         https://plus.googleapis.com/*/widget/render/comments?*
// @exclude         http://apiblog.youtube.com/*
// @exclude         https://apiblog.youtube.com/*
// @exclude         http://*.youtube.com/subscribe_embed?*
// @exclude         https://*.youtube.com/subscribe_embed?*
// @grant           GM_getValue
// @grant           GM_setValue
// @grant           GM_deleteValue
// @grant           GM_xmlhttpRequest
// @grant           GM_log
// @grant           GM_registerMenuCommand
// @grant           unsafeWindow
// @updateURL       https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.meta.js
// @downloadURL     https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js
// @updateVersion   1
// @run-at          document-start
// @priority        9001
// @contributionURL https://github.com/YePpHa/YouTubeCenter/wiki/Donate
// ==/UserScript==

!function(){function mainPage(UserProxy_token,UserProxy_functions,globalSettings,consoleSessionToken){!function(){eval("/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\n//# sourceURL=/../vendor/almond.js"),define("../vendor/almond",function(){}),eval("define('unsafeWindow',[], function(){\r\n  return window;\r\n});\n//# sourceURL=/unsafeWindow.js"),eval('define(\'support\',["unsafeWindow"], function(uw){\r\n  function localStorageTest() {\r\n    var mod = "support.test";\r\n    try {\r\n      localStorage.setItem(mod, mod);\r\n      localStorage.removeItem(mod);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  var isWebkitURL = typeof uw.webkitURL === "object";\r\n  var isURL = typeof uw.URL === "object";\r\n  var isCreateObjectURL = false;\r\n  var isRevokeObjectURL = false;\r\n  \r\n  var maxthonRuntime = window && window.external && window.external.mxGetRuntime && typeof window.external.mxGetRuntime === "function";\r\n  \r\n  if (isWebkitURL) {\r\n    isCreateObjectURL = typeof uw.webkitURL.createObjectURL === "function";\r\n    isRevokeObjectURL = typeof uw.webkitURL.revokeObjectURL === "function";\r\n  } else if (isURL) {\r\n    isCreateObjectURL = typeof uw.URL.createObjectURL === "function";\r\n    isRevokeObjectURL = typeof uw.URL.revokeObjectURL === "function";\r\n  }\r\n  \r\n  return {\r\n    localStorage: localStorageTest(),\r\n    Greasemonkey: (typeof GM_setValue !== "undefined" && (typeof GM_setValue.toString === "undefined" || GM_setValue.toString().indexOf("not supported") === -1)),\r\n    createObjectURL: isCreateObjectURL,\r\n    revokeObjectURL: isRevokeObjectURL,\r\n    webkitURL: isWebkitURL,\r\n    URL: isURL,\r\n    maxthonRuntime: maxthonRuntime,\r\n    maxthonRuntimeStorage: maxthonRuntime && window.external.mxGetRuntime() && window.external.mxGetRuntime().storage,\r\n    firefoxPort: this.port && typeof this.port.request === "function" && this.port.storage && typeof this.port.on === "function"\r\n  };\r\n});\n//# sourceURL=/support.js'),eval('define(\'utils\',["support", "unsafeWindow"], function(support, uw){\r\n  function each(obj, callback) {\r\n    if (isArray(obj)) {\r\n      for (var i = 0; i < obj.length; i++) {\r\n        if (callback(i, obj[i]) === true) break;\r\n      }\r\n    } else {\r\n      for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          if (callback(key, obj[key]) === true) break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function isArray(arr) {\r\n    return Object.prototype.toString.call(arr) === "[object Array]";\r\n  }\r\n  \r\n  function asyncCall(scope, callback) {\r\n    return setTimeout(bind.apply(null, [scope, callback].concat(Array.prototype.slice.call(arguments, 2))), 0);\r\n  }\r\n  \r\n  function bind(scope, func) {\r\n    var args = Array.prototype.slice.call(arguments, 2);\r\n    return function(){\r\n      return func.apply(scope, args.concat(Array.prototype.slice.call(arguments)))\r\n    };\r\n  }\r\n  function trimLeft(obj){\r\n    return obj.replace(/^\\s+/, "");\r\n  }\r\n  function trimRight(obj){\r\n    return obj.replace(/\\s+$/, "");\r\n  }\r\n  function map(obj, callback, thisArg) {\r\n    for (var i = 0, n = obj.length, a = []; i < n; i++) {\r\n      if (i in obj) a[i] = callback.call(thisArg, obj[i]);\r\n    }\r\n    return a;\r\n  }\r\n  \r\n  function defineLockedProperty(obj, key, setter, getter) {\r\n    if (typeof obj !== "object") obj = {};\r\n    if (ie || typeof Object.defineProperty === "function") {\r\n      Object.defineProperty(obj, key, {\r\n        get: getter,\r\n        set: setter\r\n      });\r\n      return obj;\r\n    } else {\r\n      obj.__defineGetter__(key, getter);\r\n      obj.__defineSetter__(key, setter);\r\n      return obj;\r\n    }\r\n  }\r\n  \r\n  function addEventListener(elm, event, callback, useCapture) {\r\n    if (elm.addEventListener) {\r\n      elm.addEventListener(event, callback, useCapture || false);\r\n    } else if (elm.attachEvent) {\r\n      elm.attachEvent("on" + event, callback);\r\n    }\r\n  }\r\n  \r\n  function removeEventListener(elm, event, callback, useCapture) {\r\n    if (elm.removeEventListener) {\r\n      elm.removeEventListener(event, callback, useCapture || false);\r\n    } else if (elm.detachEvent) {\r\n      elm.detachEvent("on" + event, callback);\r\n    }\r\n  }\r\n  \r\n  var ie = (function(){\r\n    for (var v = 3, el = document.createElement(\'b\'), all = el.all || []; el.innerHTML = \'<!--[if gt IE \' + (++v) + \']><i><![endif]-->\', all[0];);\r\n    return v > 4 ? v : !!document.documentMode;\r\n  }());\r\n  \r\n  var now = Date.now || function () {\r\n    return +new Date;\r\n  };\r\n  \r\n  /* Cookies */\r\n  function setCookie(name, value, domain, path, expires) {\r\n    domain = domain ? ";domain=" + encodeURIComponent(domain) : "";\r\n    path = path ? ";path=" + encodeURIComponent(path) : "";\r\n    expires = 0 > expires ? "" : 0 == expires ? ";expires=" + (new Date(1970, 1, 1)).toUTCString() : ";expires=" + (new Date(now() + 1E3 * expires)).toUTCString();\r\n    \r\n    document.cookie = encodeURIComponent(name) + "=" + encodeURIComponent(value) + domain + path + expires;\r\n  }\r\n  \r\n  function getCookie(key) {\r\n    return getCookies()[key];\r\n  }\r\n  \r\n  function getCookies() {\r\n    var c = document.cookie, v = 0, cookies = {};\r\n    if (document.cookie.match(/^\\s*\\$Version=(?:"1"|1);\\s*(.*)/)) {\r\n      c = RegExp.$1;\r\n      v = 1;\r\n    }\r\n    if (v === 0) {\r\n      map(c.split(/[,;]/), function(cookie) {\r\n        var parts = cookie.split(/=/, 2),\r\n            name = decodeURIComponent(trimLeft(parts[0])),\r\n            value = parts.length > 1 ? decodeURIComponent(trimRight(parts[1])) : null;\r\n        cookies[name] = value;\r\n      });\r\n    } else {\r\n      map(c.match(/(?:^|\\s+)([!#$%&\'*+\\-.0-9A-Z^`a-z|~]+)=([!#$%&\'*+\\-.0-9A-Z^`a-z|~]*|"(?:[\\x20-\\x7E\\x80\\xFF]|\\\\[\\x00-\\x7F])*")(?=\\s*[,;]|$)/g), function($0, $1) {\r\n        var name = $0, value = $1.charAt(0) === \'"\' ? $1.substr(1, -1).replace(/\\\\(.)/g, "$1") : $1;\r\n        cookies[name] = value;\r\n      });\r\n    }\r\n    return cookies;\r\n  }\r\n  \r\n  function endsWith(str, suffix) {\r\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n  }\r\n  \r\n  function inject(func) {\r\n    var script = document.createElement("script"),\r\n        p = (document.body || document.head || document.documentElement);\r\n    if (!p) {\r\n      throw "Could not inject!!!";\r\n    }\r\n    script.setAttribute("type", "text/javascript");\r\n    script.appendChild(document.createTextNode("(" + func + ")(" + buildArgumentList.apply(null, [false].concat(Array.prototype.slice.call(arguments, 1))) + ");"));\r\n    p.appendChild(script);\r\n    p.removeChild(script);\r\n  }\r\n  \r\n  function buildArgumentList(wrap) {\r\n    var list = [];\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n    \r\n    for (var i = 0, len = args.length; i < len; i++) {\r\n      if (typeof args[i] === "string") {\r\n        list.push("\\"" + args[i].replace(/\\\\/, "\\\\\\\\").replace(/"/g, "\\\\\\"") + "\\"");\r\n      } else if (typeof args[i] === "object") {\r\n        list.push(JSON.stringify(args[i]));\r\n      } else if (typeof args[i] === "undefined") {\r\n        list.push("null");\r\n      } else {\r\n        list.push(args[i]);\r\n      }\r\n    }\r\n    if (wrap) {\r\n      return "(" + list.join(",") + ")";\r\n    } else {\r\n      return list.join(",");\r\n    }\r\n  }\r\n  \r\n  function isJSONString(json) {\r\n    try {\r\n      JSON.parse(json);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  function xhr(details) {\r\n    var xmlhttp;\r\n    if (typeof XMLHttpRequest !== "undefined") {\r\n      xmlhttp = new XMLHttpRequest();\r\n    } else if (typeof opera !== "undefined" && typeof opera.XMLHttpRequest !== "undefined") {\r\n      xmlhttp = new opera.XMLHttpRequest();\r\n    } else {\r\n      if (details["onerror"]) {\r\n        details["onerror"]();\r\n      }\r\n      \r\n      return;\r\n    }\r\n    xmlhttp.onreadystatechange = function(){\r\n      var responseState = {\r\n        responseXML:(xmlhttp.readyState == 4 ? xmlhttp.responseXML : \'\'),\r\n        responseText:(xmlhttp.readyState == 4 ? xmlhttp.responseText : \'\'),\r\n        readyState:xmlhttp.readyState,\r\n        responseHeaders:(xmlhttp.readyState == 4 ? xmlhttp.getAllResponseHeaders() : \'\'),\r\n        status:(xmlhttp.readyState == 4 ? xmlhttp.status : 0),\r\n        statusText:(xmlhttp.readyState == 4 ? xmlhttp.statusText : \'\'),\r\n        finalUrl:(xmlhttp.readyState == 4 ? xmlhttp.finalUrl : \'\')\r\n      };\r\n      if (details["onreadystatechange"]) {\r\n        details["onreadystatechange"](responseState);\r\n      }\r\n      if (xmlhttp.readyState == 4) {\r\n        if (details["onload"] && xmlhttp.status >= 200 && xmlhttp.status < 300) {\r\n          details["onload"](responseState);\r\n        }\r\n        if (details["onerror"] && (xmlhttp.status < 200 || xmlhttp.status >= 300)) {\r\n          details["onerror"](responseState);\r\n        }\r\n      }\r\n    };\r\n    try {\r\n      xmlhttp.open(details.method, details.url);\r\n    } catch(e) {\r\n      if(details["onerror"]) {\r\n        details["onerror"]({responseXML:\'\',responseText:\'\',readyState:4,responseHeaders:\'\',status:403,statusText:\'Forbidden\'});\r\n      }\r\n      return;\r\n    }\r\n    if (details.headers) {\r\n      for (var prop in details.headers) {\r\n        xmlhttp.setRequestHeader(prop, details.headers[prop]);\r\n      }\r\n    }\r\n    xmlhttp.send((typeof(details.data) != \'undefined\') ? details.data : null);\r\n  }\r\n  \r\n  // Used for the message module (should probably move to another place)\r\n  // It replaces a property in the obj to a predefined function, where the arguments will be callbackId, target, referer\r\n  function bindFunctionCallbacks(obj, func, target, referer) {\r\n    for (key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        if (typeof obj[key] === "obj") {\r\n          bindFunctionCallbacks(obj[key]);\r\n        } else if (typeof obj[key] === "string") {\r\n          if (obj[key].indexOf("@/(message.callback)/") === 0) {\r\n            var callbackId = obj[key].split("@/(message.callback)/")[1];\r\n            obj[key] = bind(null, func, callbackId, target, referer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function extend(obj, defaults, deep) {\r\n    if (typeof obj !== "object") throw new TypeError("Unsupported type for obj.");\r\n    if (typeof defaults !== "object") throw new TypeError("Unsupported type for defaults.");\r\n    \r\n    for (var key in defaults) {\r\n      if (defaults.hasOwnProperty(key)) {\r\n        if (typeof obj[key] === "object" && typeof defaults[key] === "object" && deep) {\r\n          extend(obj[key], defaults[key], deep);\r\n        } else if (!obj.hasOwnProperty(key)) {\r\n          obj[key] = defaults[key];\r\n        }\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n  \r\n  function inArray(key, arr) {\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      if (arr[i] === key) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  function listClasses(el) {\r\n    if (!el || !el.className) return [];\r\n    return el.className.split(" ");\r\n  }\r\n  \r\n  function addClass(el, className) {\r\n    var classes = listClasses(el);\r\n    var addList = className.split(" ");\r\n    \r\n    for (var i = 0, len = addList.length; i < len; i++) {\r\n      if (!inArray(addList[i], classes)) {\r\n        el.className += " " + addList[i];\r\n      }\r\n    }\r\n    return el.className;\r\n  }\r\n  \r\n  function removeClass(el, className) {\r\n    var classes = listClasses(el);\r\n    var removeList = className.split(" ");\r\n    \r\n    var buffer = [];\r\n    for (var i = 0, len = classes.length; i < len; i++) {\r\n      if (!inArray(classes[i], removeList)) {\r\n        buffer.push(classes[i]);\r\n      }\r\n    }\r\n    return el.className = buffer.join(" ");\r\n  }\r\n  \r\n  function hasClass(el, className) {\r\n    return inArray(className, listClasses(el));\r\n  }\r\n  \r\n  function throttle(func, delay, options){\r\n    function timeout() {\r\n      previous = options.leading === false ? 0 : new Date;\r\n      timer = null;\r\n      result = func.apply(context, args);\r\n    }\r\n    var context, args, result, timer = null, previous = 0;\r\n    options = options || {};\r\n    return function(){\r\n      var now = new Date, dt;\r\n      \r\n      context = this;\r\n      args = arguments;\r\n      \r\n      if (!previous && options.leading === false) previous = now;\r\n      dt = delay - (now - previous);\r\n      \r\n      if (dt <= 0) {\r\n        clearTimeout(timer);\r\n        timer = null;\r\n        previous = now;\r\n        result = func.apply(context, args);\r\n      } else if (!timer && options.trailing !== false) {\r\n        timer = setTimeout(timeout, dt);\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n  \r\n  function clone(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n  \r\n  function removeDuplicates(arr) {\r\n    var uniqueArr = [];\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      if (!inArray(uniqueArr, arr[i])) {\r\n        uniqueArr.push(arr[i]);\r\n      }\r\n    }\r\n    \r\n    return uniqueArr;\r\n  }\r\n  \r\n  function escapeRegExp(str) {\r\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, "\\\\$&");\r\n  }\r\n  \r\n  function toBlob(bytes, contentType) {\r\n    contentType = contentType || "text/plain";\r\n    var sliceSize = 512;\r\n    \r\n    var bytesLength = bytes.length;\r\n    var slicesCount = Math.ceil(bytesLength / sliceSize);\r\n    \r\n    var byteArrays = new Array(slicesCount);\r\n    \r\n    for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\r\n      var begin = sliceIndex * sliceSize;\r\n      var end = Math.min(begin + sliceSize, bytesLength);\r\n      \r\n      var sliceBytes = new Array(end - begin);\r\n      for (var offset = begin, i = 0 ; offset < end; ++i, ++offset) {\r\n        sliceBytes[i] = bytes[offset].charCodeAt(0);\r\n      }\r\n      byteArrays[sliceIndex] = new Uint8Array(sliceBytes);\r\n    }\r\n    \r\n    return new Blob(byteArrays, { type: contentType });\r\n  }\r\n  \r\n  function createObjectURL(blob) {\r\n    if (support.createObjectURL) {\r\n      if (support.webkitURL) {\r\n        return uw.webkitURL.createObjectURL(blob);\r\n      } else {\r\n        return uw.URL.createObjectURL(blob);\r\n      }\r\n    } else {\r\n      throw "createObjectURL is not supported by the browser!";\r\n    }\r\n  }\r\n  \r\n  function revokeObjectURL(url) {\r\n    if (support.revokeObjectURL) {\r\n      if (support.webkitURL) {\r\n        return uw.webkitURL.revokeObjectURL(url);\r\n      } else {\r\n        return uw.URL.revokeObjectURL(url);\r\n      }\r\n    } else {\r\n      throw "revokeObjectURL is not supported by the browser!";\r\n    }\r\n  }\r\n  \r\n  // Returns a random number between min and max\r\n  function getRandomArbitrary(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n  \r\n  // Returns a random integer between min (included) and max (excluded)\r\n  function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n  \r\n  // Returns a random string of characters of chars with the length of length\r\n  function generateToken(chars, length) {\r\n    if (typeof chars !== "string") chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_";\r\n    if (typeof length !== "number") length = 64;\r\n    \r\n    var charsLength = chars.length;\r\n    \r\n    var token = "";\r\n    for (var i = 0; i < length; i++) {\r\n      token += chars[getRandomInt(0, charsLength)];\r\n    }\r\n    \r\n    return token;\r\n  }\r\n  \r\n  function escapeECMAVariable(key, defaultKey) {\r\n    key = key.replace(/[^0-9a-zA-Z_\\$]/g, "");\r\n    while (/$[0-9]/g.test(key) && key.length > 0) {\r\n      if (key === "") return defaultKey;\r\n      key = key.substring(1);\r\n    }\r\n    return key;\r\n  }\r\n  \r\n  function indexOfArray(value, arr) {\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      if (arr[i] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n  \r\n  function getKeys(obj) {\r\n    var keys = [];\r\n    each(obj, function(key){\r\n      keys.push(key);\r\n    });\r\n    return keys;\r\n  }\r\n  \r\n  function setProperty(target, path, value, createPath) {\r\n    var tokens = path.split(".");\r\n    for (var i = 0, len = tokens.length - 1; i < len; i++) {\r\n      if (target[tokens[i]]) {\r\n        target = target[tokens[i]];\r\n      } else {\r\n        if (createPath) {\r\n          target[tokens[i]] = {};\r\n          target = target[tokens[i]];\r\n        } else {\r\n          throw "Path " + path + " does not exist for", target;\r\n        }\r\n      }\r\n    }\r\n    target[tokens[tokens.length - 1]] = value;\r\n  }\r\n  \r\n  return {\r\n    hasClass: hasClass,\r\n    removeClass: removeClass,\r\n    addClass: addClass,\r\n    each: each,\r\n    isArray: isArray,\r\n    inArray: inArray,\r\n    bind: bind,\r\n    asyncCall: asyncCall,\r\n    defineLockedProperty: defineLockedProperty,\r\n    ie: ie,\r\n    addEventListener: addEventListener,\r\n    removeEventListener: removeEventListener,\r\n    now: now,\r\n    trimLeft: trimLeft,\r\n    trimRight: trimRight,\r\n    map: map,\r\n    setCookie: setCookie,\r\n    getCookie: getCookie,\r\n    getCookies: getCookies,\r\n    endsWith: endsWith,\r\n    inject: inject,\r\n    isJSONString: isJSONString,\r\n    xhr: xhr,\r\n    buildArgumentList: buildArgumentList,\r\n    bindFunctionCallbacks: bindFunctionCallbacks,\r\n    extend: extend,\r\n    throttle: throttle,\r\n    clone: clone,\r\n    removeDuplicates: removeDuplicates,\r\n    escapeRegExp: escapeRegExp,\r\n    toBlob: toBlob,\r\n    createObjectURL: createObjectURL,\r\n    revokeObjectURL: revokeObjectURL,\r\n    getRandomArbitrary: getRandomArbitrary,\r\n    getRandomInt: getRandomInt,\r\n    generateToken: generateToken,\r\n    escapeECMAVariable: escapeECMAVariable,\r\n    indexOfArray: indexOfArray,\r\n    getKeys: getKeys,\r\n    setProperty: setProperty\r\n  };\r\n});\n//# sourceURL=/utils.js'),eval('define(\'player/api\',["unsafeWindow", "utils"], function(unsafeWindow, utils){\r\n  function getAPI() {\r\n    if (!apiCache) {\r\n      apiCache = bindPlayerAPI();\r\n    }\r\n    return apiCache;\r\n  }\r\n  function setAPI(api) {\r\n    apiCache = api;\r\n  }\r\n  function bindPlayerAPI() {\r\n    var player = document.getElementById("movie_player");\r\n    var api = {};\r\n    \r\n    if (player && player.getApiInterface) {\r\n      var apiInterface = player.getApiInterface();\r\n      for (var i = 0, len = apiInterface.length; i < len; i++) {\r\n        api[apiInterface[i]] = utils.bind(player, player[apiInterface[i]]);\r\n      }\r\n    }\r\n    return api;\r\n  }\r\n  \r\n  var apiCache = null;\r\n  \r\n  return {\r\n    getAPI: getAPI,\r\n    setAPI: setAPI\r\n  };\r\n});\n//# sourceURL=/player/api.js'),eval('define(\'console\',["utils"], function(utils){\r\n  function setEnabled(b) {\r\n    enabled = b;\r\n  }\r\n  \r\n  function log() {\r\n    if (!enabled) return function(){};\r\n    return console.log.bind(console, "injected[" + sessionToken + "]");\r\n  }\r\n  \r\n  function error() {\r\n    if (!enabled) return function(){};\r\n    return console.error.bind(console, "injected[" + sessionToken + "]");\r\n  }\r\n  \r\n  function warn() {\r\n    if (!enabled) return function(){};\r\n    return console.warn.bind(console, "injected[" + sessionToken + "]");\r\n  }\r\n  \r\n  var sessionToken = (typeof consoleSessionToken === "string" ? consoleSessionToken : utils.generateToken(null, 8));\r\n  \r\n  var enabled = true;\r\n  \r\n  var con = {};\r\n  \r\n  con.sessionToken = sessionToken;\r\n  \r\n  utils.defineLockedProperty(con, "log", function(){}, log);\r\n  utils.defineLockedProperty(con, "error", function(){}, error);\r\n  utils.defineLockedProperty(con, "warn", function(){}, warn);\r\n  \r\n  return con;\r\n});\n//# sourceURL=/console.js'),eval('define(\'player/config\',["utils", "unsafeWindow", "console"], function(utils, uw, con){\r\n  function getConfig() {\r\n    return config;\r\n  }\r\n  \r\n  function setConfig(cfg, val) {\r\n    if (typeof cfg === "string") {\r\n      utils.setProperty(config, cfg, val, true);\r\n    } else {\r\n      config = cfg;\r\n    }\r\n  }\r\n  \r\n  function configSetter(cfg) {\r\n    setConfig(cfg); // set the configuration. Keep the reference\r\n  }\r\n  \r\n  function configGetter() {\r\n    var cfg = getConfig();\r\n    if (!cfg) return cfg;\r\n    cfg = utils.clone(cfg);\r\n    var persistentCfg = utils.clone(persistentConfig);\r\n    utils.extend(persistentCfg, cfg, true);\r\n    return persistentCfg;\r\n  }\r\n  \r\n  function setPersistentConfig(cfg, val) {\r\n    if (typeof cfg === "string") {\r\n      utils.setProperty(persistentConfig, cfg, val, true);\r\n    } else {\r\n      persistentConfig = cfg;\r\n    }\r\n  }\r\n  \r\n  function getPersistentConfig() {\r\n    return persistentConfig;\r\n  }\r\n  \r\n  var config = {};\r\n  var persistentConfig = {};\r\n  \r\n  // Make sure that ytplayer variable is set\r\n  uw.ytplayer = uw.ytplayer || {};\r\n  \r\n  config = uw.ytplayer.config || {};\r\n  \r\n  // Make sure that YouTube doesn\'t override the ytplayer variable or adding an unwanted property to ytplayer.\r\n  utils.defineLockedProperty(uw.ytplayer, "config", configSetter, configGetter);\r\n  \r\n  return {\r\n    getConfig: getConfig,\r\n    setConfig: setConfig,\r\n    setPersistentConfig: setPersistentConfig,\r\n    getPersistentConfig: getPersistentConfig\r\n  };\r\n});\n//# sourceURL=/player/config.js'),eval("define('unsafeYouTubeCenter',[\"unsafeWindow\"], function(uw){\r\n  var ytcenter = {};\r\n  ytcenter.player = {};\r\n  \r\n  uw.ytcenter = ytcenter;\r\n  \r\n  return ytcenter;\r\n});\n//# sourceURL=/unsafeYouTubeCenter.js"),eval('define(\'player/onYouTubePlayerReady\',["exports", "unsafeWindow", "./api", "./config", "utils", "unsafeYouTubeCenter", "console"], function(exports, uw, playerAPI, config, utils, uytc, con){\r\n  function onPlayerReady(api) {\r\n    playerAPI.setAPI(api);\r\n    \r\n    if (typeof api === "object") {\r\n      for (var i = 0, len = listeners.length; i < len; i++) {\r\n        listeners[i].apply(null, arguments);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function addListener(callback) {\r\n    listeners.push(callback);\r\n  }\r\n  \r\n  function removeListener(callback) {\r\n    for (var i = 0, len = listeners.length; i < len; i++) {\r\n      if (listeners[i] === callback) {\r\n        listeners.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  \r\n  var listeners = [];\r\n  \r\n  config.setPersistentConfig("args.jsapicallback", "ytcenter.player.onReady");\r\n  uytc.player.onReady = utils.bind(this, onPlayerReady);\r\n  uw.onYouTubePlayerReady = onPlayerReady;\r\n  \r\n  exports.addListener = addListener;\r\n  exports.removeListener = removeListener;\r\n  \r\n  return exports;\r\n});\n//# sourceURL=/player/onYouTubePlayerReady.js'),eval('define(\'pageload\',["utils", "console"], function(utils, con){\r\n  function addEventListener(event, callback) {\r\n    if (!listeners.hasOwnProperty(event)) {\r\n      listeners[event] = [];\r\n    }\r\n    listeners[event].push(callback);\r\n    \r\n    // Make sure the added event listener is executed!\r\n    var readyState = pageStates.indexOf(event);\r\n    if (readyState <= lastState) {\r\n      callback();\r\n    }\r\n  }\r\n  \r\n  function removeEventListener(event, callback) {\r\n    if (!listeners.hasOwnProperty(event)) {\r\n      return;\r\n    }\r\n    var l = listeners[event];\r\n    for (var i = 0, len = l.length; i < len; i++) {\r\n      if (l[i] === callback) {\r\n        l[i].splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  function callListeners(event) {\r\n    var list = listeners[event];\r\n    for (var i = 0, len = list.length; i < len; i++) {\r\n      list[i]();\r\n    }\r\n  }\r\n  \r\n  function update() {\r\n    var readyState = pageStates.indexOf(document.readyState);\r\n    \r\n    for (var i = 0, len = pageStates.length; i < len; i++) {\r\n      if (lastState < i && i <= readyState && utils.isArray(listeners[pageStates[i]])) {\r\n        callListeners(pageStates[i]);\r\n      }\r\n    }\r\n    \r\n    lastState = readyState;\r\n  }\r\n  \r\n  function init() {\r\n    utils.addEventListener(document, "readystatechange", update, true);\r\n    utils.addEventListener(document, "DOMContentLoaded", update, true);\r\n    update();\r\n  }\r\n  \r\n  var listeners = {};\r\n  var pageStates = ["uninitialized", "loading", "interactive", "complete"];\r\n  var lastState = -1;\r\n  \r\n  init();\r\n  \r\n  return {\r\n    addEventListener: addEventListener,\r\n    removeEventListener: removeEventListener\r\n  };\r\n});\n//# sourceURL=/pageload.js'),eval('define(\'ytready\',["exports", "./pageload", "unsafeWindow"], function(exports, pageload, uw){\n  function addEventListener(path, callback) {\n    if (!paths[path]) paths[path] = [];\n    paths[path].push(callback);\n    \n    update();\n  }\n  \n  function removeEventListener(path, callback) {\n    if (!paths[path]) return;\n    for (var i = 0, len = paths[path].length; i < len; i++) {\n      if (paths[path][i] === callback) {\n        paths[path].splice(i, 1);\n        return;\n      }\n    }\n  }\n  \n  /**\n  * Checks if the path in unsafeWindow is defined.\n  *\n  * @method propertyExists\n  * @param {String} path The path to the property.\n  * @return {Boolean} Returns true if the property exists otherwise false.\n  **/\n  function propertyExists(path) {\n    var tokens = path.split(".");\n    \n    var target = uw;\n    \n    for (var i = 0, len = tokens.length; i < len; i++) {\n      if (target[tokens[i]]) {\n        target = target[tokens[i]];\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n  \n  /**\n  * Checks if the added path listeners exist\n  * and if they do then call the callbacks\n  * for that specific path listener.\n  *\n  * @method update\n  **/\n  function update() {\n    for (var path in paths) {\n      if (paths[path]) {\n        if (propertyExists(path)) {\n          var callbacks = paths[path];\n          for (var i = 0, len = callbacks.length; i < len; i++) {\n            callbacks[i]();\n          }\n          paths[path] = null;\n        }\n      }\n    }\n    timerUpdate();\n  }\n  \n  function isWorking() {\n    for (var path in paths) {\n      if (paths[path]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  function timerUpdate() {\n    clearTimeout(timer);\n    if (isWorking()) {\n      setTimeout(update, timerInterval);\n    }\n  }\n  \n  var timerInterval = 1000;\n  \n  var timer = null;\n  var paths = { };\n  \n  // Attach the update to the page load.\n  pageload.addEventListener("uninitialized", update);\n  pageload.addEventListener("loading", update);\n  pageload.addEventListener("interactive", update);\n  pageload.addEventListener("complete", update);\n  \n  \n  /* Exports */\n  exports.addEventListener = addEventListener;\n  exports.removeEventListener = removeEventListener;\n  \n  return exports;\n});\n//# sourceURL=/ytready.js'),eval('define(\'player/listeners\',["exports", "utils", "./api", "unsafeWindow", "console", "./onYouTubePlayerReady", "ytready"], function(exports, utils, playerAPI, uw, con, onReady, ytready){\r\n  // Get the YouTube listener for the passed event.\r\n  function getYouTubeListener(event) {\r\n    var ytEvent = getListenerName(event);\r\n    return ytListeners[ytEvent];\r\n  }\r\n  \r\n  // The latest player id registered in the global window.\r\n  function getPlayerListenerDetails() {\r\n    var id = 1;\r\n    var uid = null;\r\n    \r\n    utils.each(uw, function(key, value){\r\n      if (key.indexOf("ytPlayer") === 0) {\r\n        if (key.indexOf("player_uid_") !== -1) {\r\n          var uidMatch = key.match(/player_uid_([0-9]+)_([0-9]+)$/);\r\n          \r\n          uid = parseInt(uidMatch[1], 10);\r\n          i = parseInt(uidMatch[2], 10);\r\n          \r\n          if (i > id) {\r\n            id = i;\r\n          }\r\n        } else {\r\n          var idMatch = key.match(/player([0-9]+)$/);\r\n          i = parseInt(idMatch[1], 10);\r\n          if (i > id) {\r\n            id = i;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    return { id: id, uid: uid };\r\n  }\r\n  \r\n  function getListenerName(event) {\r\n    if (playerListenerDetails.uid !== null) {\r\n      return "ytPlayer" + event + "player_uid_" + playerListenerDetails.uid + "_" + playerListenerDetails.id;\r\n    } else {\r\n      return "ytPlayer" + event + "player" + playerListenerDetails.id;\r\n    }\r\n  }\r\n  \r\n  function ytListenerContainerSetter(event, func) {\r\n    var ytEvent = getListenerName(event);\r\n    ytListeners[ytEvent] = func;\r\n  }\r\n  function ytListenerContainerGetter(event, func) {\r\n    return utils.bind(null, callListener, event, ORIGIN_PROPERTY);\r\n  }\r\n  \r\n  /* Origin argument\r\n   * If origin is equal to 0 then the origin is directly from the player (only YouTube Center\'s listeners get executed if override is false).\r\n   * If origin is equal to 1 then the origin is from the global listeners (both YouTube\'s and YouTube Center\'s listeners get executed).\r\n   */\r\n  function callListener(event, origin) {\r\n    function generateThisObject() {\r\n      return {\r\n        getOriginalListener: utils.bind(null, getYouTubeListener, event)\r\n      };\r\n    }\r\n    \r\n    var ytEvent = getListenerName(event);\r\n    var args = Array.prototype.slice.call(arguments, 2);\r\n    var returnVal = null;\r\n    \r\n    if (enabled && origin === ORIGIN_PLAYER && (!events.hasOwnProperty(event) || (events.hasOwnProperty(event) && !events[event].override))) {\r\n      /* Override is false and the origin is from the player; call the YouTube Center listeners */\r\n      if (events.hasOwnProperty(event)) {\r\n        for (var i = 0, len = events[event].listeners.length; i < len; i++) {\r\n          returnVal = events[event].listeners[i].apply(null, args);\r\n        }\r\n      }\r\n    } else if (enabled && origin === ORIGIN_PROPERTY) {\r\n      if (events.hasOwnProperty(event) && events[event].override) {\r\n        /* Override is true and the origin is from the global window; call the YouTube Center listeners */\r\n        for (var i = 0, len = events[event].listeners.length; i < len; i++) {\r\n          events[event].listeners[i].apply(generateThisObject(), args);\r\n        }\r\n      } else if (ytListeners[ytEvent]) {\r\n        if (apiNotAvailable) {\r\n          /* API is not available therefore call YouTube Center listeners as YouTube listener is called  */\r\n          for (var i = 0, len = events[event].listeners.length; i < len; i++) {\r\n            returnVal = events[event].listeners[i].apply(null, args);\r\n          }\r\n        }\r\n        \r\n        /* Override is false and the origin is from the global window; call the YouTube listener */\r\n        returnVal = ytListeners[ytEvent].apply(uw, args);\r\n      }\r\n    } else if (!enabled) {\r\n      /* Everything is disabled; call the YouTube listener */\r\n      returnVal = ytListeners[ytEvent].apply(uw, args);\r\n    }\r\n    return returnVal;\r\n  }\r\n  \r\n  function addPlayerListener() {\r\n    var api = playerAPI.getAPI();\r\n    var event;\r\n    \r\n    if (api && api.addEventListener) {\r\n      apiNotAvailable = false;\r\n      for (event in events) {\r\n        if (events.hasOwnProperty(event)) {\r\n          playerListener[event] = utils.bind(null, callListener, event, ORIGIN_PLAYER);\r\n          api.addEventListener(event, playerListener[event]);\r\n        }\r\n      }\r\n    } else {\r\n      apiNotAvailable = true;\r\n      con.error("[Player Listener] Player API is not available!");\r\n    }\r\n  }\r\n  \r\n  function initGlobalListeners() {\r\n    if (globalListenersInitialized) return; // Make sure that this function is only called once.\r\n    globalListenersInitialized = true;\r\n    for (var event in events) {\r\n      if (events.hasOwnProperty(event)) {\r\n        var ytEvent = getListenerName(event);\r\n        if (uw[ytEvent]) {\r\n          ytListeners[ytEvent] = uw[ytEvent];\r\n        }\r\n        utils.defineLockedProperty(uw, ytEvent,\r\n          utils.bind(null, ytListenerContainerSetter, event),\r\n          utils.bind(null, ytListenerContainerGetter, event)\r\n        );\r\n      }\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    if (enabled) return;\r\n    var api = playerAPI.getAPI();\r\n    playerListenerDetails = getPlayerListenerDetails();\r\n    \r\n    enabled = true; // Indicate that the it\'s active.\r\n\r\n    // Add the listeners normally to the player\r\n    addPlayerListener();\r\n    \r\n    // Replace the global listeners with custom listeners in case the override property is set to true\r\n    initGlobalListeners();\r\n  }\r\n  \r\n  function addEventListener(event, listener) {\r\n    if (!events.hasOwnProperty(event)) return;\r\n    \r\n    removeEventListener(event, listener); // Make sure that there is only one instance of the listener registered.\r\n    events[event].listeners.push(listener);\r\n  }\r\n      \r\n  function removeEventListener(event, listener) {\r\n    if (!events.hasOwnProperty(event)) return;\r\n    for (var i = 0, len = events[event].listeners.length; i < len; i++) {\r\n      if (events[event].listeners[i] === listener) {\r\n        return events[event].listeners.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setOverride(event, override) {\r\n    if (!events.hasOwnProperty(event)) return;\r\n    events[event].override = !!override;\r\n  }\r\n  \r\n  function unloadPlayerListeners() {\r\n    var api = playerAPI.getAPI();\r\n    var event;\r\n    \r\n    if (api && api.removeEventListener) {\r\n      for (event in events) {\r\n        if (events.hasOwnProperty(event)) {\r\n          api.removeEventListener(event, playerListener[event]);\r\n          delete playerListener[event];\r\n        }\r\n      }\r\n    } else {\r\n      con.error("[Player Listener] Player API is not available!");\r\n    }\r\n  }\r\n  \r\n  function unload() {\r\n    unloadPlayerListeners();\r\n    enabled = false;\r\n    apiNotAvailable = true;\r\n  }\r\n  \r\n  var ORIGIN_PLAYER = 0;\r\n  var ORIGIN_PROPERTY = 1;\r\n  \r\n  var playerListenerDetails = { id: 1, uid: null };\r\n  var ytListeners = {};\r\n  var playerListener = {}; // Reference for unload\r\n  var enabled = false;\r\n  var globalListenersInitialized = false;\r\n  var apiNotAvailable = true;\r\n  \r\n  var events = {\r\n    "onApiChange": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onCueRangeEnter": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onCueRangeExit": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onError": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onNavigate": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onPlaybackQualityChange": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onStateChange": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onTabOrderChange": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onVolumeChange": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onAdStart": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onReady": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "RATE_SENTIMENT": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "SHARE_CLICKED": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "SIZE_CLICKED": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "WATCH_LATER": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "AdvertiserVideoView": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "captionschanged": {\r\n      override: false,\r\n      listeners: []\r\n    },\r\n    "onRemoteReceiverSelected": {\r\n      override: false,\r\n      listeners: []\r\n    }\r\n  };\r\n  \r\n  // Intialize the player listeners at player on ready.\r\n  onReady.addListener(init);\r\n  \r\n  /* Exports */\r\n  exports.addEventListener = addEventListener;\r\n  exports.removeEventListener = removeEventListener;\r\n  exports.setOverride = setOverride;\r\n  exports.init = init;\r\n  exports.unload = unload;\r\n  \r\n  return exports;\r\n});\n//# sourceURL=/player/listeners.js'),eval("define('window',[], function(){\r\n  function getInnerWidth() {\r\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n  }\r\n  function getInnerHeight() {\r\n    return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n  }\r\n  \r\n  function getClientWidth() {\r\n    return document.documentElement.clientWidth || window.innerWidth || document.body.clientWidth;\r\n  }\r\n  \r\n  function getClientHeight() {\r\n    return document.documentElement.clientHeight || window.innerHeight || document.body.clientHeight;\r\n  }\r\n  \r\n  function addEventListener(event, callback, capture) {\r\n    window.addEventListener(event, callback, capture);\r\n  }\r\n  \r\n  return {\r\n    getClientWidth: getClientWidth,\r\n    getClientHeight: getClientHeight,\r\n    getInnerWidth: getInnerWidth,\r\n    getInnerHeight: getInnerHeight,\r\n    addEventListener: addEventListener\r\n  }\r\n});\n//# sourceURL=/window.js"),eval('define(\'player/size\',["exports", "./listeners", "./player", "window", "utils"], function(exports, listeners, player, win, utils){\r\n  function onPlayerSizeChange(large) {\r\n    if (large) {\r\n      setSize(largeSize);\r\n    } else {\r\n      setSize(smallSize);\r\n    }\r\n    update();\r\n  }\r\n  \r\n  function setSize(nSize) {\r\n    size = nSize;\r\n    update();\r\n  }\r\n  \r\n  function update() {\r\n    var playerEl = document.getElementById("player");\r\n    var playerAPIEl = document.getElementById("player-api");\r\n    var playerTheaterBackgroundEl = document.getElementById("theater-background");\r\n    \r\n    utils.removeClass(playerEl, "watch-small watch-medium watch-large");\r\n    if (size.large) {\r\n      utils.addClass(playerEl, "watch-large");\r\n    } else {\r\n      utils.addClass(playerEl, "watch-small");\r\n    }\r\n    \r\n    var dim = getPlayerDimension();\r\n    if (size.large) {\r\n      playerEl.style.width = dim.width + "px";\r\n    } else {\r\n      playerEl.style.width = "auto";\r\n    }\r\n    playerTheaterBackgroundEl.style.height = dim.height + "px";\r\n    \r\n    playerAPIEl.style.width = dim.width + "px";\r\n    playerAPIEl.style.height = dim.height + "px";\r\n    \r\n    var contentContainerEl = document.getElementById("watch7-container");\r\n    if (size.large) {\r\n      utils.addClass(contentContainerEl, "watch-wide");\r\n    } else {\r\n      utils.removeClass(contentContainerEl, "watch-wide");\r\n    }\r\n    \r\n    var sidebarEl = document.getElementById("watch7-sidebar");\r\n    if (size.large) {\r\n      sidebarEl.style.top = "";\r\n    } else {\r\n      sidebarEl.style.top = "-" + dim.height + "px";\r\n    }\r\n  }\r\n  \r\n  function getPlayerDimension() {\r\n    var playerEl = document.getElementById("player");\r\n    \r\n    var width = null;\r\n    var height = null;\r\n    \r\n    if (typeof size.width === "number") {\r\n      if (size.widthUnit === "%") {\r\n        width = size.width/100*win.getClientWidth();\r\n      } else {\r\n        width = size.width;\r\n      }\r\n    }\r\n    \r\n    if (typeof size.width === "number") {\r\n      if (size.heightUnit === "%") {\r\n        height = size.height/100*win.getClientHeight();\r\n        // if (something.isTopBar())\r\n        height -= 50;\r\n      } else {\r\n        height = size.height;\r\n      }\r\n    }\r\n    \r\n    var ratio = getRatio();\r\n    \r\n    if (typeof width !== "number") {\r\n      if (typeof height === "number") {\r\n        width = height*ratio;\r\n      } else {\r\n        width = getDefaultWidth();\r\n      }\r\n    }\r\n    \r\n    if (typeof height !== "number") {\r\n      if (typeof width === "number") {\r\n        height = width/ratio;\r\n      } else {\r\n        height = getDefaultHeight();\r\n      }\r\n    }\r\n    \r\n    // Controlbar + Progressbar height\r\n    var controlbarHeight = player.getControlbarHeight();\r\n    height += controlbarHeight;\r\n    \r\n    // Multi camera additional height\r\n    if (utils.hasClass(playerEl, "watch-multicamera") && player.getType === "flash") {\r\n      height += 80;\r\n    }\r\n    \r\n    return {\r\n      width: Math.floor(width),\r\n      height: Math.floor(height)\r\n    };\r\n  }\r\n  \r\n  function setSmallPlayerSize(small) {\r\n    smallSize = small;\r\n  }\r\n  \r\n  function setLargePlayerSize(large) {\r\n    largeSize = large;\r\n  }\r\n  \r\n  function getRatio() {\r\n    return 16/9;\r\n  }\r\n  \r\n  function getDefaultWidth() {\r\n    return 640;\r\n  }\r\n  \r\n  function getDefaultHeight() {\r\n    return getDefaultWidth()/getRatio();\r\n  }\r\n  \r\n  var smallSize = {\r\n    width: 1280,\r\n    widthUnit: "px",\r\n    large: true\r\n  };\r\n  var largeSize = {\r\n    width: 1920,\r\n    widthUnit: "px",\r\n    large: true\r\n  };\r\n  \r\n  var size = {\r\n    width: 1280,\r\n    height: 720,\r\n    widthUnit: "px",\r\n    heightUnit: "px",\r\n    large: true\r\n  };\r\n  \r\n  listeners.setOverride("SIZE_CLICKED", true);\r\n  listeners.addEventListener("SIZE_CLICKED", onPlayerSizeChange);\r\n  \r\n  win.addEventListener("resize", utils.throttle(update, 100));\r\n  \r\n  /* Exports */\r\n  exports.setSize = setSize;\r\n  exports.getRatio = getRatio;\r\n  \r\n  return exports;\r\n});\n//# sourceURL=/player/size.js'),eval('define(\'player/player\',["exports", "player/api", "player/config", "unsafeWindow", "player/size"], function(exports, playerAPI, playerConfig, uw, size){\r\n  /**\r\n  * Get the current player type, which can either be HTML5 or flash.\r\n  *\r\n  * @method getType\r\n  * @return {String} The player type.\r\n  **/\r\n  function getType() {\r\n    var api = playerAPI.getAPI();\r\n    if (api && typeof api.getPlayerType === "function") {\r\n      return api.getPlayerType();\r\n    }\r\n    var cfg = playerConfig.getConfig();\r\n    if (cfg.html5) {\r\n      return "html5";\r\n    } else {\r\n      return "flash";\r\n    }\r\n  }\r\n  \r\n  /**\r\n  * Setting the player type to either HTML5 or flash\r\n  *\r\n  * @method setType\r\n  * @param {String} type The desired player type (HTML5 or flash).\r\n  **/\r\n  function setType(type) {\r\n    var currentType = getType();\r\n    if (type === currentType) {\r\n      return; // Do nothing as it\'s already the desired player type\r\n    } else {\r\n      var api = playerAPI.getAPI();\r\n      playerConfig.setConfig("html5", (type === "html5" ? true : false)); // Setting the property html5 to either true or false\r\n      \r\n      // Soft-reloading the player. If YouTube detects that the html5 property has changed it will change the player.\r\n      if (api && typeof api.loadNewVideoConfig === "function") {\r\n        api.loadNewVideoConfig(uw.ytplayer.config);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n  * Get the controlbar height.\r\n  *\r\n  * @method getControlbarHeight\r\n  * @return {Number} The height of the controlbar on the player.\r\n  **/\r\n  function getControlbarHeight() {\r\n    var none = 0;\r\n    var onlyControlbar = 3;\r\n    var onlyProgressbar = 30;\r\n    var both = 35;\r\n    \r\n    var cfg = playerConfig.getConfig();\r\n    var autohide = null;\r\n    \r\n    if (cfg && cfg.args && typeof cfg.args.autohide === "string") {\r\n      autohide = cfg.args.autohide;\r\n    } else if (getType() === "html5") {\r\n      var ratio = size.getRatio();\r\n      if (ratio < 1.35) {\r\n        autohide = "3";\r\n      }\r\n    }\r\n    \r\n    switch (autohide) {\r\n      case "0": return both;\r\n      case "1": return none;\r\n      case "3": return onlyControlbar;\r\n      case "2": default: return onlyProgressbar;\r\n    }\r\n  }\r\n  \r\n  /**\r\n  * Calling yt.player.Application.create to tell YouTube to\r\n  * create the YouTube player again and dispose of the old\r\n  * player.\r\n  *\r\n  * @method reload\r\n  **/\r\n  function reload() {\r\n    if (uw && uw.yt && uw.yt.player && uw.yt.player.Application && typeof uw.yt.player.Application.create === "function") {\r\n      uw.yt.player.Application.create("player-api", playerConfig.getConfig());\r\n    }\r\n  }\r\n  \r\n  exports.getType = getType;\r\n  exports.setType = setType;\r\n  exports.getControlbarHeight = getControlbarHeight;\r\n  exports.getAPI = playerAPI.getAPI;\r\n  exports.getConfig = playerConfig.getConfig;\r\n  exports.setConfig = playerConfig.setConfig;\r\n  exports.reload = reload;\r\n  return exports;\r\n});\n//# sourceURL=/player/player.js'),eval('define(\'main\',["player/player", "unsafeWindow"], function(player, uw){\r\n  uw.player = player;\r\n});\n//# sourceURL=/main.js'),require(["main"])
}()}!function(){eval("/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\n//# sourceURL=/../vendor/almond.js"),define("../vendor/almond",function(){}),eval("define('unsafeWindow',[], function(){\r\n  return window;\r\n});\n//# sourceURL=/unsafeWindow.js"),eval('define(\'support\',["unsafeWindow"], function(uw){\r\n  function localStorageTest() {\r\n    var mod = "support.test";\r\n    try {\r\n      localStorage.setItem(mod, mod);\r\n      localStorage.removeItem(mod);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  var isWebkitURL = typeof uw.webkitURL === "object";\r\n  var isURL = typeof uw.URL === "object";\r\n  var isCreateObjectURL = false;\r\n  var isRevokeObjectURL = false;\r\n  \r\n  var maxthonRuntime = window && window.external && window.external.mxGetRuntime && typeof window.external.mxGetRuntime === "function";\r\n  \r\n  if (isWebkitURL) {\r\n    isCreateObjectURL = typeof uw.webkitURL.createObjectURL === "function";\r\n    isRevokeObjectURL = typeof uw.webkitURL.revokeObjectURL === "function";\r\n  } else if (isURL) {\r\n    isCreateObjectURL = typeof uw.URL.createObjectURL === "function";\r\n    isRevokeObjectURL = typeof uw.URL.revokeObjectURL === "function";\r\n  }\r\n  \r\n  return {\r\n    localStorage: localStorageTest(),\r\n    Greasemonkey: (typeof GM_setValue !== "undefined" && (typeof GM_setValue.toString === "undefined" || GM_setValue.toString().indexOf("not supported") === -1)),\r\n    createObjectURL: isCreateObjectURL,\r\n    revokeObjectURL: isRevokeObjectURL,\r\n    webkitURL: isWebkitURL,\r\n    URL: isURL,\r\n    maxthonRuntime: maxthonRuntime,\r\n    maxthonRuntimeStorage: maxthonRuntime && window.external.mxGetRuntime() && window.external.mxGetRuntime().storage,\r\n    firefoxPort: this.port && typeof this.port.request === "function" && this.port.storage && typeof this.port.on === "function"\r\n  };\r\n});\n//# sourceURL=/support.js'),eval('define(\'utils\',["support", "unsafeWindow"], function(support, uw){\r\n  function each(obj, callback) {\r\n    if (isArray(obj)) {\r\n      for (var i = 0; i < obj.length; i++) {\r\n        if (callback(i, obj[i]) === true) break;\r\n      }\r\n    } else {\r\n      for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          if (callback(key, obj[key]) === true) break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function isArray(arr) {\r\n    return Object.prototype.toString.call(arr) === "[object Array]";\r\n  }\r\n  \r\n  function asyncCall(scope, callback) {\r\n    return setTimeout(bind.apply(null, [scope, callback].concat(Array.prototype.slice.call(arguments, 2))), 0);\r\n  }\r\n  \r\n  function bind(scope, func) {\r\n    var args = Array.prototype.slice.call(arguments, 2);\r\n    return function(){\r\n      return func.apply(scope, args.concat(Array.prototype.slice.call(arguments)))\r\n    };\r\n  }\r\n  function trimLeft(obj){\r\n    return obj.replace(/^\\s+/, "");\r\n  }\r\n  function trimRight(obj){\r\n    return obj.replace(/\\s+$/, "");\r\n  }\r\n  function map(obj, callback, thisArg) {\r\n    for (var i = 0, n = obj.length, a = []; i < n; i++) {\r\n      if (i in obj) a[i] = callback.call(thisArg, obj[i]);\r\n    }\r\n    return a;\r\n  }\r\n  \r\n  function defineLockedProperty(obj, key, setter, getter) {\r\n    if (typeof obj !== "object") obj = {};\r\n    if (ie || typeof Object.defineProperty === "function") {\r\n      Object.defineProperty(obj, key, {\r\n        get: getter,\r\n        set: setter\r\n      });\r\n      return obj;\r\n    } else {\r\n      obj.__defineGetter__(key, getter);\r\n      obj.__defineSetter__(key, setter);\r\n      return obj;\r\n    }\r\n  }\r\n  \r\n  function addEventListener(elm, event, callback, useCapture) {\r\n    if (elm.addEventListener) {\r\n      elm.addEventListener(event, callback, useCapture || false);\r\n    } else if (elm.attachEvent) {\r\n      elm.attachEvent("on" + event, callback);\r\n    }\r\n  }\r\n  \r\n  function removeEventListener(elm, event, callback, useCapture) {\r\n    if (elm.removeEventListener) {\r\n      elm.removeEventListener(event, callback, useCapture || false);\r\n    } else if (elm.detachEvent) {\r\n      elm.detachEvent("on" + event, callback);\r\n    }\r\n  }\r\n  \r\n  var ie = (function(){\r\n    for (var v = 3, el = document.createElement(\'b\'), all = el.all || []; el.innerHTML = \'<!--[if gt IE \' + (++v) + \']><i><![endif]-->\', all[0];);\r\n    return v > 4 ? v : !!document.documentMode;\r\n  }());\r\n  \r\n  var now = Date.now || function () {\r\n    return +new Date;\r\n  };\r\n  \r\n  /* Cookies */\r\n  function setCookie(name, value, domain, path, expires) {\r\n    domain = domain ? ";domain=" + encodeURIComponent(domain) : "";\r\n    path = path ? ";path=" + encodeURIComponent(path) : "";\r\n    expires = 0 > expires ? "" : 0 == expires ? ";expires=" + (new Date(1970, 1, 1)).toUTCString() : ";expires=" + (new Date(now() + 1E3 * expires)).toUTCString();\r\n    \r\n    document.cookie = encodeURIComponent(name) + "=" + encodeURIComponent(value) + domain + path + expires;\r\n  }\r\n  \r\n  function getCookie(key) {\r\n    return getCookies()[key];\r\n  }\r\n  \r\n  function getCookies() {\r\n    var c = document.cookie, v = 0, cookies = {};\r\n    if (document.cookie.match(/^\\s*\\$Version=(?:"1"|1);\\s*(.*)/)) {\r\n      c = RegExp.$1;\r\n      v = 1;\r\n    }\r\n    if (v === 0) {\r\n      map(c.split(/[,;]/), function(cookie) {\r\n        var parts = cookie.split(/=/, 2),\r\n            name = decodeURIComponent(trimLeft(parts[0])),\r\n            value = parts.length > 1 ? decodeURIComponent(trimRight(parts[1])) : null;\r\n        cookies[name] = value;\r\n      });\r\n    } else {\r\n      map(c.match(/(?:^|\\s+)([!#$%&\'*+\\-.0-9A-Z^`a-z|~]+)=([!#$%&\'*+\\-.0-9A-Z^`a-z|~]*|"(?:[\\x20-\\x7E\\x80\\xFF]|\\\\[\\x00-\\x7F])*")(?=\\s*[,;]|$)/g), function($0, $1) {\r\n        var name = $0, value = $1.charAt(0) === \'"\' ? $1.substr(1, -1).replace(/\\\\(.)/g, "$1") : $1;\r\n        cookies[name] = value;\r\n      });\r\n    }\r\n    return cookies;\r\n  }\r\n  \r\n  function endsWith(str, suffix) {\r\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n  }\r\n  \r\n  function inject(func) {\r\n    var script = document.createElement("script"),\r\n        p = (document.body || document.head || document.documentElement);\r\n    if (!p) {\r\n      throw "Could not inject!!!";\r\n    }\r\n    script.setAttribute("type", "text/javascript");\r\n    script.appendChild(document.createTextNode("(" + func + ")(" + buildArgumentList.apply(null, [false].concat(Array.prototype.slice.call(arguments, 1))) + ");"));\r\n    p.appendChild(script);\r\n    p.removeChild(script);\r\n  }\r\n  \r\n  function buildArgumentList(wrap) {\r\n    var list = [];\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n    \r\n    for (var i = 0, len = args.length; i < len; i++) {\r\n      if (typeof args[i] === "string") {\r\n        list.push("\\"" + args[i].replace(/\\\\/, "\\\\\\\\").replace(/"/g, "\\\\\\"") + "\\"");\r\n      } else if (typeof args[i] === "object") {\r\n        list.push(JSON.stringify(args[i]));\r\n      } else if (typeof args[i] === "undefined") {\r\n        list.push("null");\r\n      } else {\r\n        list.push(args[i]);\r\n      }\r\n    }\r\n    if (wrap) {\r\n      return "(" + list.join(",") + ")";\r\n    } else {\r\n      return list.join(",");\r\n    }\r\n  }\r\n  \r\n  function isJSONString(json) {\r\n    try {\r\n      JSON.parse(json);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  function xhr(details) {\r\n    var xmlhttp;\r\n    if (typeof XMLHttpRequest !== "undefined") {\r\n      xmlhttp = new XMLHttpRequest();\r\n    } else if (typeof opera !== "undefined" && typeof opera.XMLHttpRequest !== "undefined") {\r\n      xmlhttp = new opera.XMLHttpRequest();\r\n    } else {\r\n      if (details["onerror"]) {\r\n        details["onerror"]();\r\n      }\r\n      \r\n      return;\r\n    }\r\n    xmlhttp.onreadystatechange = function(){\r\n      var responseState = {\r\n        responseXML:(xmlhttp.readyState == 4 ? xmlhttp.responseXML : \'\'),\r\n        responseText:(xmlhttp.readyState == 4 ? xmlhttp.responseText : \'\'),\r\n        readyState:xmlhttp.readyState,\r\n        responseHeaders:(xmlhttp.readyState == 4 ? xmlhttp.getAllResponseHeaders() : \'\'),\r\n        status:(xmlhttp.readyState == 4 ? xmlhttp.status : 0),\r\n        statusText:(xmlhttp.readyState == 4 ? xmlhttp.statusText : \'\'),\r\n        finalUrl:(xmlhttp.readyState == 4 ? xmlhttp.finalUrl : \'\')\r\n      };\r\n      if (details["onreadystatechange"]) {\r\n        details["onreadystatechange"](responseState);\r\n      }\r\n      if (xmlhttp.readyState == 4) {\r\n        if (details["onload"] && xmlhttp.status >= 200 && xmlhttp.status < 300) {\r\n          details["onload"](responseState);\r\n        }\r\n        if (details["onerror"] && (xmlhttp.status < 200 || xmlhttp.status >= 300)) {\r\n          details["onerror"](responseState);\r\n        }\r\n      }\r\n    };\r\n    try {\r\n      xmlhttp.open(details.method, details.url);\r\n    } catch(e) {\r\n      if(details["onerror"]) {\r\n        details["onerror"]({responseXML:\'\',responseText:\'\',readyState:4,responseHeaders:\'\',status:403,statusText:\'Forbidden\'});\r\n      }\r\n      return;\r\n    }\r\n    if (details.headers) {\r\n      for (var prop in details.headers) {\r\n        xmlhttp.setRequestHeader(prop, details.headers[prop]);\r\n      }\r\n    }\r\n    xmlhttp.send((typeof(details.data) != \'undefined\') ? details.data : null);\r\n  }\r\n  \r\n  // Used for the message module (should probably move to another place)\r\n  // It replaces a property in the obj to a predefined function, where the arguments will be callbackId, target, referer\r\n  function bindFunctionCallbacks(obj, func, target, referer) {\r\n    for (key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        if (typeof obj[key] === "obj") {\r\n          bindFunctionCallbacks(obj[key]);\r\n        } else if (typeof obj[key] === "string") {\r\n          if (obj[key].indexOf("@/(message.callback)/") === 0) {\r\n            var callbackId = obj[key].split("@/(message.callback)/")[1];\r\n            obj[key] = bind(null, func, callbackId, target, referer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function extend(obj, defaults, deep) {\r\n    if (typeof obj !== "object") throw new TypeError("Unsupported type for obj.");\r\n    if (typeof defaults !== "object") throw new TypeError("Unsupported type for defaults.");\r\n    \r\n    for (var key in defaults) {\r\n      if (defaults.hasOwnProperty(key)) {\r\n        if (typeof obj[key] === "object" && typeof defaults[key] === "object" && deep) {\r\n          extend(obj[key], defaults[key], deep);\r\n        } else if (!obj.hasOwnProperty(key)) {\r\n          obj[key] = defaults[key];\r\n        }\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n  \r\n  function inArray(key, arr) {\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      if (arr[i] === key) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  function listClasses(el) {\r\n    if (!el || !el.className) return [];\r\n    return el.className.split(" ");\r\n  }\r\n  \r\n  function addClass(el, className) {\r\n    var classes = listClasses(el);\r\n    var addList = className.split(" ");\r\n    \r\n    for (var i = 0, len = addList.length; i < len; i++) {\r\n      if (!inArray(addList[i], classes)) {\r\n        el.className += " " + addList[i];\r\n      }\r\n    }\r\n    return el.className;\r\n  }\r\n  \r\n  function removeClass(el, className) {\r\n    var classes = listClasses(el);\r\n    var removeList = className.split(" ");\r\n    \r\n    var buffer = [];\r\n    for (var i = 0, len = classes.length; i < len; i++) {\r\n      if (!inArray(classes[i], removeList)) {\r\n        buffer.push(classes[i]);\r\n      }\r\n    }\r\n    return el.className = buffer.join(" ");\r\n  }\r\n  \r\n  function hasClass(el, className) {\r\n    return inArray(className, listClasses(el));\r\n  }\r\n  \r\n  function throttle(func, delay, options){\r\n    function timeout() {\r\n      previous = options.leading === false ? 0 : new Date;\r\n      timer = null;\r\n      result = func.apply(context, args);\r\n    }\r\n    var context, args, result, timer = null, previous = 0;\r\n    options = options || {};\r\n    return function(){\r\n      var now = new Date, dt;\r\n      \r\n      context = this;\r\n      args = arguments;\r\n      \r\n      if (!previous && options.leading === false) previous = now;\r\n      dt = delay - (now - previous);\r\n      \r\n      if (dt <= 0) {\r\n        clearTimeout(timer);\r\n        timer = null;\r\n        previous = now;\r\n        result = func.apply(context, args);\r\n      } else if (!timer && options.trailing !== false) {\r\n        timer = setTimeout(timeout, dt);\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n  \r\n  function clone(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n  \r\n  function removeDuplicates(arr) {\r\n    var uniqueArr = [];\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      if (!inArray(uniqueArr, arr[i])) {\r\n        uniqueArr.push(arr[i]);\r\n      }\r\n    }\r\n    \r\n    return uniqueArr;\r\n  }\r\n  \r\n  function escapeRegExp(str) {\r\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, "\\\\$&");\r\n  }\r\n  \r\n  function toBlob(bytes, contentType) {\r\n    contentType = contentType || "text/plain";\r\n    var sliceSize = 512;\r\n    \r\n    var bytesLength = bytes.length;\r\n    var slicesCount = Math.ceil(bytesLength / sliceSize);\r\n    \r\n    var byteArrays = new Array(slicesCount);\r\n    \r\n    for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\r\n      var begin = sliceIndex * sliceSize;\r\n      var end = Math.min(begin + sliceSize, bytesLength);\r\n      \r\n      var sliceBytes = new Array(end - begin);\r\n      for (var offset = begin, i = 0 ; offset < end; ++i, ++offset) {\r\n        sliceBytes[i] = bytes[offset].charCodeAt(0);\r\n      }\r\n      byteArrays[sliceIndex] = new Uint8Array(sliceBytes);\r\n    }\r\n    \r\n    return new Blob(byteArrays, { type: contentType });\r\n  }\r\n  \r\n  function createObjectURL(blob) {\r\n    if (support.createObjectURL) {\r\n      if (support.webkitURL) {\r\n        return uw.webkitURL.createObjectURL(blob);\r\n      } else {\r\n        return uw.URL.createObjectURL(blob);\r\n      }\r\n    } else {\r\n      throw "createObjectURL is not supported by the browser!";\r\n    }\r\n  }\r\n  \r\n  function revokeObjectURL(url) {\r\n    if (support.revokeObjectURL) {\r\n      if (support.webkitURL) {\r\n        return uw.webkitURL.revokeObjectURL(url);\r\n      } else {\r\n        return uw.URL.revokeObjectURL(url);\r\n      }\r\n    } else {\r\n      throw "revokeObjectURL is not supported by the browser!";\r\n    }\r\n  }\r\n  \r\n  // Returns a random number between min and max\r\n  function getRandomArbitrary(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n  \r\n  // Returns a random integer between min (included) and max (excluded)\r\n  function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n  \r\n  // Returns a random string of characters of chars with the length of length\r\n  function generateToken(chars, length) {\r\n    if (typeof chars !== "string") chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_";\r\n    if (typeof length !== "number") length = 64;\r\n    \r\n    var charsLength = chars.length;\r\n    \r\n    var token = "";\r\n    for (var i = 0; i < length; i++) {\r\n      token += chars[getRandomInt(0, charsLength)];\r\n    }\r\n    \r\n    return token;\r\n  }\r\n  \r\n  function escapeECMAVariable(key, defaultKey) {\r\n    key = key.replace(/[^0-9a-zA-Z_\\$]/g, "");\r\n    while (/$[0-9]/g.test(key) && key.length > 0) {\r\n      if (key === "") return defaultKey;\r\n      key = key.substring(1);\r\n    }\r\n    return key;\r\n  }\r\n  \r\n  function indexOfArray(value, arr) {\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      if (arr[i] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n  \r\n  function getKeys(obj) {\r\n    var keys = [];\r\n    each(obj, function(key){\r\n      keys.push(key);\r\n    });\r\n    return keys;\r\n  }\r\n  \r\n  function setProperty(target, path, value, createPath) {\r\n    var tokens = path.split(".");\r\n    for (var i = 0, len = tokens.length - 1; i < len; i++) {\r\n      if (target[tokens[i]]) {\r\n        target = target[tokens[i]];\r\n      } else {\r\n        if (createPath) {\r\n          target[tokens[i]] = {};\r\n          target = target[tokens[i]];\r\n        } else {\r\n          throw "Path " + path + " does not exist for", target;\r\n        }\r\n      }\r\n    }\r\n    target[tokens[tokens.length - 1]] = value;\r\n  }\r\n  \r\n  return {\r\n    hasClass: hasClass,\r\n    removeClass: removeClass,\r\n    addClass: addClass,\r\n    each: each,\r\n    isArray: isArray,\r\n    inArray: inArray,\r\n    bind: bind,\r\n    asyncCall: asyncCall,\r\n    defineLockedProperty: defineLockedProperty,\r\n    ie: ie,\r\n    addEventListener: addEventListener,\r\n    removeEventListener: removeEventListener,\r\n    now: now,\r\n    trimLeft: trimLeft,\r\n    trimRight: trimRight,\r\n    map: map,\r\n    setCookie: setCookie,\r\n    getCookie: getCookie,\r\n    getCookies: getCookies,\r\n    endsWith: endsWith,\r\n    inject: inject,\r\n    isJSONString: isJSONString,\r\n    xhr: xhr,\r\n    buildArgumentList: buildArgumentList,\r\n    bindFunctionCallbacks: bindFunctionCallbacks,\r\n    extend: extend,\r\n    throttle: throttle,\r\n    clone: clone,\r\n    removeDuplicates: removeDuplicates,\r\n    escapeRegExp: escapeRegExp,\r\n    toBlob: toBlob,\r\n    createObjectURL: createObjectURL,\r\n    revokeObjectURL: revokeObjectURL,\r\n    getRandomArbitrary: getRandomArbitrary,\r\n    getRandomInt: getRandomInt,\r\n    generateToken: generateToken,\r\n    escapeECMAVariable: escapeECMAVariable,\r\n    indexOfArray: indexOfArray,\r\n    getKeys: getKeys,\r\n    setProperty: setProperty\r\n  };\r\n});\n//# sourceURL=/utils.js'),eval("define('storage/localStorage',[\"utils\"], function(utils){\r\n  function getItem(key, callback, preferSync) {\r\n    var item = localStorage.getItem(key);\r\n    if (preferSync) {\r\n      callback(item);\r\n    } else {\r\n      utils.asyncCall(null, callback, item);\r\n    }\r\n  }\r\n  \r\n  return {\r\n    setItem: utils.bind(localStorage, localStorage.setItem),\r\n    getItem: getItem,\r\n    removeItem: utils.bind(localStorage, localStorage.removeItem)\r\n  };\r\n});\n//# sourceURL=/storage/localStorage.js"),eval('define(\'storage/cookies\',["utils"], function(utils){\r\n  function setItem(key, value) {\r\n    utils.setCookie(prefix + key, value, null, "/", 1000*24*60*60*1000);\r\n  }\r\n  \r\n  function getItem(key, callback, preferSync) {\r\n    var item = utils.getCookie(prefix + key);\r\n    if (preferSync) {\r\n      callback(item);\r\n    } else {\r\n      utils.asyncCall(null, callback, item);\r\n    }\r\n  }\r\n  \r\n  function removeItem(key) {\r\n    utils.setCookie(prefix + key, "", null, "/", 0);\r\n  }\r\n  \r\n  var prefix = "ytcenter.";\r\n  \r\n  return {\r\n    setItem: setItem,\r\n    getItem: getItem,\r\n    removeItem: removeItem\r\n  };\r\n});\n//# sourceURL=/storage/cookies.js'),eval('define(\'console\',["utils"], function(utils){\r\n  function setEnabled(b) {\r\n    enabled = b;\r\n  }\r\n  \r\n  function log() {\r\n    if (!enabled) return function(){};\r\n    return console.log.bind(console, "userscript[" + sessionToken + "]");\r\n  }\r\n  \r\n  function error() {\r\n    if (!enabled) return function(){};\r\n    return console.error.bind(console, "userscript[" + sessionToken + "]");\r\n  }\r\n  \r\n  function warn() {\r\n    if (!enabled) return function(){};\r\n    return console.warn.bind(console, "userscript[" + sessionToken + "]");\r\n  }\r\n  \r\n  var sessionToken = (typeof consoleSessionToken === "string" ? consoleSessionToken : utils.generateToken(null, 8));\r\n  \r\n  var enabled = true;\r\n  \r\n  var con = {};\r\n  \r\n  con.sessionToken = sessionToken;\r\n  \r\n  utils.defineLockedProperty(con, "log", function(){}, log);\r\n  utils.defineLockedProperty(con, "error", function(){}, error);\r\n  utils.defineLockedProperty(con, "warn", function(){}, warn);\r\n  \r\n  return con;\r\n});\n//# sourceURL=/console.js'),eval('define(\'storage/browser\',["support", "storage/localStorage", "storage/cookies", "console"], function(support, localStorage, cookies){\r\n  if (support.localStorage) {\r\n    return localStorage;\r\n  } else {\r\n    return cookies;\r\n  }\r\n});\n//# sourceURL=/storage/browser.js'),eval('define(\'storage/userscript\',["support", "storage/browser", "utils"], function(support, browser, utils){\r\n  function setItem(key, value) {\r\n    GM_setValue(key, value);\r\n  }\r\n  \r\n  function getItem(key, callback, preferSync) {\r\n    var item = GM_getValue(key);\r\n    if (preferSync) {\r\n      callback(item);\r\n    } else {\r\n      utils.asyncCall(null, callback, item);\r\n    }\r\n  }\r\n  \r\n  function removeItem(key) {\r\n    GM_deleteValue(key);\r\n  }\r\n  \r\n  if (support.Greasemonkey) {\r\n    return {\r\n      setItem: setItem,\r\n      removeItem: removeItem,\r\n      getItem: getItem\r\n    };\r\n  } else {\r\n    return browser;\r\n  }\r\n});\n//# sourceURL=/storage/userscript.js'),eval('define(\'storage\',["exports", "storage/userscript", "utils"], function(exports, storageHandler, utils){\r\n  function setItem(key, value) {\r\n    cache[key] = value;\r\n    storageHandler.setItem(key, value);\r\n  }\r\n  \r\n  function removeItem(key) {\r\n    delete cache[key];\r\n    storageHandler.removeItem(key);\r\n  }\r\n  \r\n  function getItemCallback(callback, key, value) {\r\n    cache[key] = value;\r\n    callback(cache[key]);\r\n  }\r\n  \r\n  function getItem(key, callback, sync) {\r\n    if (!(key in cache)) {\r\n      storageHandler.getItem(key, utils.bind(null, getItemCallback, callback, key));\r\n    } else {\r\n      if (sync) {\r\n        callback(cache[key]);\r\n        return cache[key];\r\n      } else {\r\n        utils.asyncCall(null, callback, cache[key]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  var cache = {};\r\n  \r\n  /* Exports */\r\n  exports.setItem = setItem;\r\n  exports.removeItem = removeItem;\r\n  exports.getItem = getItem;\r\n  \r\n  return exports;\r\n});\n//# sourceURL=/storage.js'),eval('define(\'UserProxy/CustomEvent\',["utils"], function(utils){\r\n  function addEventListener(event, listener) {\r\n    if (!events[event]) {\r\n      // Creating the array of listeners for event\r\n      events[event] = [];\r\n      \r\n      docListeners[event] = utils.bind(null, eventListener, event, events[event]);\r\n      \r\n      // Adding the event listener.\r\n      window.addEventListener(event, docListeners[event], false);\r\n    }\r\n    \r\n    // Adding listener to array.\r\n    events[event].push(listener);\r\n  }\r\n  \r\n  function removeEventListener(event, listener) {\r\n    if (event in events) {\r\n      for (var i = 0, len = events[event].length; i < len; i++) {\r\n        if (events[event][i] === listener) {\r\n          events[event].splice(i, 1);\r\n          i--; len--;\r\n        }\r\n      }\r\n      if (events[event].length === 0) {\r\n        window.removeEventListener(event, docListeners[event], false);\r\n        \r\n        events[event] = null;\r\n        docListeners[event] = null;\r\n      }\r\n    }\r\n  }\r\n  \r\n  function eventListener(event, listeners, e) {\r\n    e = e || window.event;\r\n    \r\n    // Parse the detail to the original object.\r\n    var data = JSON.parse(e.detail);\r\n    \r\n    if (typeof data.detail === "object" && data.token !== token) {\r\n      var detail = data.detail;\r\n      for (var i = 0, len = listeners.length; i < len; i++) {\r\n        // Call the listener with the event name and the parsed detail.\r\n        listeners[i](detail);\r\n      }\r\n      \r\n      // Prevent propagation\r\n      if (e && typeof e.stopPropagation === "function") {\r\n        e.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function fireEvent(event, detail) {\r\n    // Creating the event\r\n    var e = document.createEvent("CustomEvent");\r\n    e.initCustomEvent(event, true, true, JSON.stringify({ detail: detail, token: token }));\r\n    \r\n    // Firing the event\r\n    document.documentElement.dispatchEvent(e);\r\n  }\r\n  \r\n  var token = utils.generateToken(); // The token is used to identify itself and prevent calling its own listeners.\r\n  var events = {};\r\n  var docListeners = {};\r\n  \r\n  return {\r\n    addEventListener: addEventListener,\r\n    removeEventListener: removeEventListener,\r\n    fireEvent: fireEvent\r\n  };\r\n});\n//# sourceURL=/UserProxy/CustomEvent.js'),eval('define(\'UserProxy/Message\',["utils"], function(utils){\r\n  function addEventListener(event, listener) {\r\n    initMessage(); // Init the message event listener if not already initialized.\r\n    \r\n    if (!events[event]) events[event] = [];\r\n    \r\n    // Bind the event name to the listener as an argument.\r\n    var boundListener = utils.bind(null, listener, event);\r\n    \r\n    // Add the boundListener to the event\r\n    events[event].push(boundListener);\r\n  }\r\n  \r\n  function fireEvent(event, detail) {\r\n    window.postMessage(JSON.stringify({ token: token, event: event, detail: detail }), "*");\r\n  }\r\n  \r\n  function messageListener(e) {\r\n    e = e || window.event;\r\n    \r\n    // Parse the detail to the original object.\r\n    var data = JSON.parse(e.data);\r\n    \r\n    // Verify that the retrieved information is correct and that it didn\'t call itself.\r\n    if (typeof data.event === "string" && typeof data.detail === "object" && data.token !== token) {\r\n      \r\n      // Iterate through every listener for data.event.\r\n      if (utils.isArray(events[data.event])) {\r\n        var listeners = events[data.event];\r\n        \r\n        var detail = data.detail;\r\n        for (var i = 0, len = listeners.length; i < len; i++) {\r\n          listeners(detail);\r\n        }\r\n    \r\n        // Prevent propagation only if everything went well.\r\n        if (e && typeof e.stopPropagation === "function") {\r\n          e.stopPropagation();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function initMessage() {\r\n    if (!messageEventAdded) {\r\n      // Adding the message event listener.\r\n      window.addEventListener("message", messageListener, false);\r\n    }\r\n  }\r\n  \r\n  var messageEventAdded = false;\r\n  var token = utils.generateToken(); // The token is used to identify itself and prevent calling its own listeners.\r\n  \r\n  var events = {};\r\n  \r\n  return {\r\n    addEventListener: addEventListener,\r\n    fireEvent: fireEvent\r\n  };\r\n});\n//# sourceURL=/UserProxy/Message.js'),eval("define('UserProxy/support',[], function(){\r\n  function customEvent() {\r\n    try {\r\n      var e = document.createEvent('CustomEvent');\r\n      if (e && typeof e.initCustomEvent === \"function\") {\r\n        e.initCustomEvent(mod, true, true, { mod: mod });\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  var mod = \"support.test\";\r\n  \r\n  return {\r\n    CustomEvent: customEvent\r\n  };\r\n});\n//# sourceURL=/UserProxy/support.js"),eval('define(\'UserProxy/memFunction\',["utils", "./CustomEvent", "./Message", "./support"], function(utils, customEvent, message, support){\r\n  function parseObject(obj, token, type) {\r\n    if (typeof obj === "object") {\r\n      utils.each(obj, function(key, value){\r\n        if (typeof value === "object") {\r\n          obj[key] = parseObject(value, token, type);\r\n        } else if (typeof value === "string") {\r\n          obj[key] = parseString(value);\r\n        } else if (typeof value === "function") {\r\n          var id = cache.push(value) - 1;\r\n          obj[key] = "${" + token + "/" + type + "/" + id + "}";\r\n        }\r\n      });\r\n    } else if (typeof value === "string") {\r\n      obj = parseString(obj);\r\n    } else if (typeof obj === "function") {\r\n      var id = cache.push(obj) - 1;\r\n      obj = "${" + token + "/" + type + "/" + id + "}";\r\n    }\r\n    return obj;\r\n  }\r\n  \r\n  function parseString(str) {\r\n    if (/^\\$[\\\\]*\\{([0-9a-zA-Z\\.\\-_\\/\\\\]+)\\}$/g.test(str)) {\r\n      return "$\\\\" + str.substring(1);\r\n    }\r\n    return str;\r\n  }\r\n  \r\n  function restoreString(str, token, type) {\r\n    if (/^\\$\\{([0-9a-zA-Z\\.\\-_]+)\\/([0-9a-zA-Z\\.\\-_]+)\\/([0-9]+)\\}$/g.test(str)) {\r\n      var parsed = str.substring(2, str.length - 1).split("/"); // " + token + "/" + type + "/" + id + "\r\n      var id = parseInt(parsed[2], 10);\r\n      if (parsed[0] === token && parsed[1] === type) {\r\n        return cache[id];\r\n      } else {\r\n        return utils.bind(null, functionPlaceholder, parsed[0] + "-" + parsed[1], id);\r\n      }\r\n    } else if (/^\\$[\\\\]+\\{([0-9a-zA-Z\\.\\-_\\/\\\\]+)\\}$/g.test(str)) {\r\n      return "$" + str.substring(2);\r\n    }\r\n    return str;\r\n  }\r\n  \r\n  function restoreObject(obj, token, type) {\r\n    if (typeof obj === "object") {\r\n      utils.each(obj, function(key, value){\r\n        if (typeof value === "object") {\r\n          obj[key] = restoreObject(value, token, type);\r\n        } else if (typeof value === "string") {\r\n          obj[key] = restoreString(value, token, type);\r\n        } else if (typeof value === "function") {\r\n          throw Error("Function was found!");\r\n        }\r\n      });\r\n    } else if (typeof value === "string") {\r\n      return restoreString(value, token, type);\r\n    } else if (typeof value === "function") {\r\n      throw Error("Function was found!");\r\n    }\r\n    return obj;\r\n  }\r\n  \r\n  function functionPlaceholder(event, id) {\r\n    var args = Array.prototype.slice.call(arguments, 2);\r\n    if (support.CustomEvent) {\r\n      return customEvent.fireEvent(event, { callbackId: id, args: args, mem: true });\r\n    } else {\r\n      return message.fireEvent(event, { callbackId: id, args: args, mem: true });\r\n    }\r\n  }\r\n  \r\n  function getCacheFunction(id) {\r\n    return cache[id];\r\n  }\r\n  \r\n  var cache = [];\r\n  \r\n  return {\r\n    parseObject: parseObject,\r\n    restoreObject: restoreObject,\r\n    getCacheFunction: getCacheFunction\r\n  };\r\n});\n//# sourceURL=/UserProxy/memFunction.js'),eval('define(\'UserProxy/Connection\',["./CustomEvent", "./Message", "utils", "./support", "./memFunction"], function(customEvent, message, utils, support, mem){\r\n  function listenerProxy(functions, token, type, detail) {\r\n    setTimeout(utils.bind(null, listener, functions, token, type, detail), 4);\r\n  }\r\n  \r\n  function listener(functions, token, type, detail) {\r\n    var keys = utils.getKeys(functions);\r\n    var index = utils.indexOfArray(detail.method, keys);\r\n    if (index > -1) {\r\n      var result = functions[keys[index]].apply(null, mem.restoreObject(detail.args, token, type));\r\n      if (typeof detail.id === "number") {\r\n        var memResult = mem.parseObject(result, token, type);\r\n        var detail = { callbackId: detail.id, args: [ memResult ] };\r\n        if (support.CustomEvent) {\r\n          customEvent.fireEvent(token + "-page", detail);\r\n        } else {\r\n          message.addEventListener(token + "-page", detail);\r\n        }\r\n      }\r\n    } else {\r\n      throw "Method " + detail.method + " has not been set!";\r\n    }\r\n  }\r\n  \r\n  function Connection(pageProxy) {\r\n    this.token = utils.generateToken();\r\n    this.functions = {};\r\n    this.namespace = "UserProxy";\r\n    this.pageProxy = pageProxy;\r\n  }\r\n  \r\n  Connection.prototype.setFunctions = function setFunctions(functions) {\r\n    this.functions = functions;\r\n  }\r\n  \r\n  Connection.prototype.setNamespace = function setFunctions(namespace) {\r\n    this.namespace = namespace;\r\n  }\r\n  \r\n  Connection.prototype.inject = function inject(code) {\r\n    var parent = (document.body || document.head || document.documentElement);\r\n    if (!parent) throw "Parent was not found!";\r\n    \r\n    var script = document.createElement("script")\r\n    script.setAttribute("type", "text/javascript");\r\n\r\n    this.connect();\r\n    \r\n    var args = [ false, this.token, utils.getKeys(this.functions) ];\r\n    args = args.concat(Array.prototype.slice.call(arguments, 1));\r\n    \r\n    var content = "(" + code + ")(" + utils.buildArgumentList.apply(null, args) + ");";\r\n    \r\n    script.appendChild(document.createTextNode(content));\r\n    \r\n    parent.appendChild(script);\r\n    parent.removeChild(script);\r\n  }\r\n  \r\n  Connection.prototype.connect = function connect() {\r\n    if (this.establishedConnectionListener) this.disconnect();\r\n    \r\n    this.establishedConnectionListener = utils.bind(null, listenerProxy, this.functions, this.token, "content");\r\n    if (support.CustomEvent) {\r\n      customEvent.addEventListener(this.token + "-content", this.establishedConnectionListener);\r\n    } else {\r\n      message.addEventListener(this.token + "-content", this.establishedConnectionListener);\r\n    }\r\n  }\r\n  \r\n  Connection.prototype.disconnect = function connect() {\r\n    if (!this.establishedConnectionListener) return;\r\n    if (support.CustomEvent) {\r\n      customEvent.removeEventListener(this.token + "-content", this.establishedConnectionListener);\r\n    } else {\r\n      message.removeEventListener(this.token + "-content", this.establishedConnectionListener);\r\n    }\r\n    this.establishedConnectionListener = null;\r\n  }\r\n  \r\n  return Connection;\r\n});\n//# sourceURL=/UserProxy/Connection.js'),eval("define('extensions-connection/userscript',[], function(){\r\n  function empty() { }\r\n  return {\r\n    setPageConnection: empty\r\n  };\r\n});\n//# sourceURL=/extensions-connection/userscript.js"),eval('define(\'xhr/browser\',[], function(){\r\n  function xhr(details) {\r\n    var xmlhttp;\r\n    if (typeof XMLHttpRequest != "undefined") {\r\n      xmlhttp = new XMLHttpRequest();\r\n    } else {\r\n      details["onerror"](responseState);\r\n    }\r\n    xmlhttp.onreadystatechange = function(){\r\n      var responseState = {\r\n        responseXML: \'\',\r\n        responseText: (xmlhttp.readyState == 4 ? xmlhttp.responseText : \'\'),\r\n        readyState: xmlhttp.readyState,\r\n        responseHeaders: (xmlhttp.readyState == 4 ? xmlhttp.getAllResponseHeaders() : \'\'),\r\n        status: (xmlhttp.readyState == 4 ? xmlhttp.status : 0),\r\n        statusText: (xmlhttp.readyState == 4 ? xmlhttp.statusText : \'\'),\r\n        finalUrl: (xmlhttp.readyState == 4 ? xmlhttp.finalUrl : \'\')\r\n      };\r\n      if (details["onreadystatechange"]) {\r\n        details["onreadystatechange"](responseState);\r\n      }\r\n      if (xmlhttp.readyState == 4) {\r\n        if (details["onload"] && xmlhttp.status >= 200 && xmlhttp.status < 300) {\r\n          details["onload"](responseState);\r\n        }\r\n        if (details["onerror"] && (xmlhttp.status < 200 || xmlhttp.status >= 300)) {\r\n          details["onerror"](responseState);\r\n        }\r\n      }\r\n    };\r\n    try {\r\n      xmlhttp.open(details.method, details.url);\r\n    } catch(e) {\r\n      details["onerror"]();\r\n    }\r\n    if (details.headers) {\r\n      for (var prop in details.headers) {\r\n        xmlhttp.setRequestHeader(prop, details.headers[prop]);\r\n      }\r\n    }\r\n    xmlhttp.send((typeof(details.data) !== \'undefined\') ? details.data : null);\r\n  }\r\n  \r\n  return xhr;\r\n});\n//# sourceURL=/xhr/browser.js'),eval('define(\'xhr/userscript\',["support", "xhr/browser"], function(support, browser){\r\n  if (support.Greasemonkey) {\r\n    return GM_xmlhttpRequest;\r\n  } else {\r\n    return browser;\r\n  }\r\n});\n//# sourceURL=/xhr/userscript.js'),eval("define('xhr',[\"xhr/userscript\"], function(xhr){\r\n  return xhr;\r\n});\n//# sourceURL=/xhr.js"),eval('define(\'main-wrapper\',["storage", "UserProxy/Connection", "extensions-connection/userscript", "xhr", "console"], function(storage, Connection, extension, xhr, con){\r\n  var functionMap = {\r\n    "setItem": storage.setItem,\r\n    "getItem": storage.getItem,\r\n    "removeItem": storage.removeItem,\r\n    "xhr": xhr,\r\n    "log": con.log\r\n  };\r\n  \r\n  var connection = null;\r\n  \r\n  storage.getItem("YouTubeCenterSettings", function(settings){\r\n    if (typeof settings !== "object") settings = JSON.parse(settings || "{}");\r\n    \r\n    connection = new Connection();\r\n    connection.setFunctions(functionMap);\r\n    \r\n    extension.setPageConnection(connection);\r\n    \r\n    connection.inject(mainPage, settings, con.sessionToken);\r\n  }, true);\r\n});\n//# sourceURL=/main-wrapper.js'),require(["main-wrapper"])
}()}();